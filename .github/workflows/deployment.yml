# This is a basic workflow to help you get started with Actions

name: Production Deployment

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: production
    env:
      CI: false
      VITE_WALLET_CONNECT_PROJECT_ID: ${{ vars.VITE_WALLET_CONNECT_PROJECT_ID }}
      VITE_RENZO_PROJECT_ID: ${{ vars.VITE_RENZO_PROJECT_ID }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Setup pnpm
      # You may pin to the exact commit or the version.
      # uses: pnpm/action-setup@c3b53f6a16e57305370b4ae5a540c2077a1d50dd
        uses: pnpm/action-setup@v2.2.4
        with:
        # Version of pnpm to install
          version: latest # optional
        # Where to store pnpm files
        # dest: # optional, default is ~/setup-pnpm
        # If specified, run `pnpm install`
          run_install: true # optional, default is null

      - name: Install dependencies
        run: pnpm install

      - name: Run Lint
        run: pnpm run lint

      - name: Build
        run: pnpm run build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy static site to S3 bucket
        run: aws s3 sync ./dist/ s3://claims.tokentable.xyz --delete

      - name: Create invalidation in CloudFront
        run: aws cloudfront create-invalidation --distribution-id E1RFXKT74CU9NQ --paths '/*'
